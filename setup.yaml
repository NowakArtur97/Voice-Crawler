AWSTemplateFormatVersion: 2010-09-09
Description: Voice Crawler Template
Parameters:
  RawAudioBucketName:
    Type: String
    Description: S3 Bucket name for raw audio files
    Default: raw-audio-voice-crawler
  TranscribedAudioBucketName:
    Type: String
    Description: S3 Bucket name for transcribed audio files
    Default: transcribed-audio-voice-crawler
  LogRetentionInDays:
    Type: String
    Description: Number of log retention days
    Default: 1

Resources:
  RawAudioS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref RawAudioBucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt TranscribeAudioLambdaFunction.Arn
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .mp3
  S3InvokeTranscribeAudioLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt TranscribeAudioLambdaFunction.Arn
      SourceArn: !Sub "arn:aws:s3:::${RawAudioBucketName}"
      SourceAccount: !Ref "AWS::AccountId"
      Principal: s3.amazonaws.com
  TranscribeAudioLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: TranscribeAudioLambda-S3BucketsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: !Sub "arn:aws:s3:::${RawAudioBucketName}"
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub "arn:aws:s3:::${RawAudioBucketName}/*"
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub "arn:aws:s3:::${TranscribedAudioBucketName}/*"
              - Effect: Allow
                Action:
                  - "transcribe:StartTranscriptionJob"
                Resource: "*"
  TranscribeAudioLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${TranscribeAudioLambdaFunction}"
      RetentionInDays: !Ref LogRetentionInDays
  TranscribeAudioLambdaLogPermissions:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref TranscribeAudioLambdaRole
      PolicyName: !Sub "${AWS::Region}-TranscribeAudioLambdaLogGroup"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${TranscribeAudioLambdaFunction}"
              - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${TranscribeAudioLambdaFunction}:*"
              - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${TranscribeAudioLambdaFunction}:*:*"
  TranscribeAudioLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.9
      Timeout: 60
      Handler: index.lambda_handler
      Role: !GetAtt TranscribeAudioLambdaRole.Arn
      Environment:
        Variables:
          RAW_AUDIO_BUCKET_NAME: !Ref RawAudioBucketName
          TRANSCRIBED_AUDIO_BUCKET_NAME: !Ref TranscribedAudioBucketName
      Code:
        ZipFile: |
          import os.path
          import urllib.parse
          import boto3
  TranscribedAudioS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref TranscribedAudioBucketName
